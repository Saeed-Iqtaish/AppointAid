@model AppointAid.ViewModels.AppointmentsViewModel

<div class="container mt-4">
    <h1 class="text-center">Appointments</h1>

    <!-- Upcoming Appointments -->
    <div class="card mt-4">
        <div class="card-header bg-primary text-white">
            <h4 class="m-0">Upcoming Appointments</h4>
        </div>
        <div class="card-body">
            @if (Model.UpcomingAppointments.Any())
            {
                foreach (var appointment in Model.UpcomingAppointments)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <p><strong>Doctor:</strong> Dr. @appointment.Doctor?.FullName</p>
                            <p><strong>Medical Center:</strong> @appointment.Doctor?.Sector?.MedicalCenter?.MedicalCenterName</p>
                            <p><strong>Sector:</strong> @appointment.Doctor?.Sector?.Name"</p>
                            <p><strong>Date:</strong> @appointment.TimeSlot?.Date.ToString("MMMM dd, yyyy")</p>
                            <p><strong>Status:</strong> @appointment.Status</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No upcoming appointments available.</p>
            }
        </div>
    </div>

    <!-- Previous Appointments -->
    <div class="card mt-4">
        <div class="card-header bg-secondary text-white">
            <h4 class="m-0">Previous Appointments</h4>
        </div>
        <div class="card-body">
            @if (Model.PreviousAppointments.Any())
            {
                foreach (var appointment in Model.PreviousAppointments)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <p><strong>Doctor:</strong> Dr. @appointment.Doctor?.FullName"</p>
                            <p><strong>Medical Center:</strong> @appointment.Doctor?.Sector?.MedicalCenter?.MedicalCenterName </p>
                            <p><strong>Sector:</strong> @appointment.Doctor?.Sector?.Name</p>
                            <p><strong>Date:</strong> @appointment.TimeSlot?.Date.ToString("MMMM dd, yyyy") ?? "Not Scheduled"</p>
                            <p><strong>Status:</strong> @appointment.Status</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No previous appointments available.</p>
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".cancel-appointment").forEach(button => {
            button.addEventListener("click", function () {
                let appointmentId = this.getAttribute("data-appointment-id");

                if (!confirm("Are you sure you want to cancel this appointment?")) {
                    return;
                }

                fetch('/Patients/CancelAppointment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ appointmentId: appointmentId })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to cancel the appointment');
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);
                    location.reload(); // Reload to update the UI
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("Failed to cancel appointment. Please try again.");
                });
            });
        });
    });
</script>