@{
    ViewData["Title"] = "Patient Dashboard";
    var approvedAppointments = ViewBag.ApprovedAppointments as List<AppointAid.Models.Appointment>;
    var approvedTests = ViewBag.ApprovedTests as List<AppointAid.Models.MedicalTest>;
    var upcomingAppointments = ViewBag.UpcomingAppointments as List<AppointAid.Models.Appointment> ?? new List<AppointAid.Models.Appointment>();
    var upcomingTests = ViewBag.UpcomingTests as List<AppointAid.Models.MedicalTest> ?? new List<AppointAid.Models.MedicalTest>();
    var approvedReports = ViewBag.ApprovedReports as List<AppointAid.Models.PatientReport> ?? new List<AppointAid.Models.PatientReport>();
}

<div class="container mt-4">
    <!-- Approved Requests -->
    <div class="card mt-4">
        <div class="card-header bg-primary text-white">
            <h4>Approved Requests</h4>
        </div>
        <div class="card-body">
            @if ((ViewBag.ApprovedReports as List<AppointAid.Models.PatientReport>).Any() ||
            (ViewBag.ApprovedTests as List<AppointAid.Models.MedicalTest>).Any())
            {
                <ul class="list-group">
                    @foreach (var report in ViewBag.ApprovedReports as List<AppointAid.Models.PatientReport>)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <strong>Sector:</strong> @report.Sector?.Name
                            </div>
                            <a href="@Url.Action("BookAppointment", "Patients", new { reportId = report.PatientReportId })"
                               class="btn btn-primary d-flex align-items-center"
                               style="gap: 0.5rem;">
                                <i class="bi bi-calendar-check"></i> Make Appointment
                            </a>
                        </li>
                    }

                    @foreach (var test in ViewBag.ApprovedTests as List<AppointAid.Models.MedicalTest>)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <strong>Test:</strong> @test.TestName <br />
                                <strong>Medical Center:</strong> @test.Doctor?.Sector?.MedicalCenter?.MedicalCenterName
                            </div>
                            <a href="@Url.Action("ScheduleTest", "Patients", new { testId = test.MedicalTestId })"
                               class="btn btn-primary d-flex align-items-center"
                               style="gap: 0.5rem;">
                                <i class="bi bi-calendar-check"></i> Set Test Time
                            </a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted text-center">No approved requests available at the moment.</p>
            }
        </div>
    </div>
</div>

<!-- Upcoming Appointments/Tests -->
<div id="dynamic-card" class="card mt-4">
    <div class="card-header d-flex justify-content-between align-items-center bg-primary text-white">
        <button id="prev-card" class="btn btn-outline-light btn-lg" style="font-size: 1.5rem; padding: 0.5rem 1rem; border: 2px solid white;">&#8592;</button>
        <h4 id="dynamic-title" class="text-center flex-grow-1 m-0">Upcoming Appointments</h4>
        <button id="next-card" class="btn btn-outline-light btn-lg" style="font-size: 1.5rem; padding: 0.5rem 1rem; border: 2px solid white;">&#8594;</button>
    </div>
    <div id="dynamic-content" class="card-body">
        @if (upcomingAppointments.Any())
        {
            @foreach (var appointment in upcomingAppointments)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(appointment.Doctor?.FullName))
                        {
                            <p><strong>Doctor:</strong> Dr. @appointment.Doctor.FullName</p>
                        }

                        @if (!string.IsNullOrEmpty(appointment.Doctor?.Sector?.MedicalCenter?.MedicalCenterName))
                        {
                            <p><strong>Medical Center:</strong> @appointment.Doctor.Sector.MedicalCenter.MedicalCenterName</p>
                        }

                        @if (!string.IsNullOrEmpty(appointment.Doctor?.Sector?.Name))
                        {
                            <p><strong>Sector:</strong> @appointment.Doctor.Sector.Name</p>
                        }

                        <p>
                            <strong>Date:</strong>
                            @if (appointment.TimeSlot != null)
                            {
                                var appointmentDateTime = appointment.TimeSlot.Date.Add(appointment.TimeSlot.StartTime);
                                @appointmentDateTime.ToString("MMMM dd, yyyy h:mm tt")
                                ;
                            }
                            else
                            {
                                @:Not Scheduled
                            }
                        </p>

                        @if (!string.IsNullOrEmpty(appointment.Status))
                        {
                            <p><strong>Status:</strong> @appointment.Status</p>
                        }

                        <div class="d-flex justify-content-between">
                            <button class="btn btn-primary btn-sm">Get Location</button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No upcoming appointments available.</p>
        }
    </div>
    <div class="card-footer">
        <a id="dynamic-button" class="btn btn-primary" href="@Url.Action("Symptoms", "Patients")">
            Set New Appointment
        </a>
    </div>
</div>

<script>
    const dynamicButton = document.getElementById("dynamic-button");
    const title = document.getElementById("dynamic-title");

    document.querySelectorAll("#prev-card, #next-card").forEach((button) => {
        button.addEventListener("click", async function () {
            const content = document.getElementById("dynamic-content");
            const isUpcomingAppointments = title.textContent === "Upcoming Appointments";

            title.textContent = isUpcomingAppointments ? "Upcoming Tests" : "Upcoming Appointments";
            dynamicButton.textContent = isUpcomingAppointments ? "Request New Test" : "Set New Appointment";
            dynamicButton.href = isUpcomingAppointments
                ? "@Url.Action("RequestMedicalTest", "Patients")"
                : "@Url.Action("Symptoms", "Patients")";

            const url = isUpcomingAppointments
                ? "@Url.Action("GetUpcomingTests", "Patients")"
                : "@Url.Action("GetUpcomingAppointments", "Patients")";

            try {
                const response = await fetch(url);
                const html = await response.text();
                content.innerHTML = html;
            } catch (error) {
                console.error("Failed to fetch content", error);
                content.innerHTML = "<p class='text-danger'>Failed to load content. Please try again later.</p>";
            }
        });
    });
</script>